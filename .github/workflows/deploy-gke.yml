name: CI/CD to GKE (keyless)

on:
  push:
    branches: [ "main" ]   # after PRs are merged
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for OIDC â†’ WIF

concurrency:
  group: deploy-gke-prod
  cancel-in-progress: true

env:
  PROJECT_ID:     ${{ vars.GCP_PROJECT }}
  GAR_LOCATION:   ${{ vars.GAR_LOCATION }}         # e.g. europe-north2
  GAR_REPO:       ${{ vars.GAR_REPO }}             # e.g. recipes-repo
  IMAGE_NAME:     ${{ vars.IMAGE_NAME }}           # e.g. receptsamling
  IMAGE_URI:      ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ vars.GAR_REPO }}/${{ vars.IMAGE_NAME }}
  GKE_CLUSTER:    ${{ vars.GKE_CLUSTER }}          # e.g. receptsamling
  GKE_LOCATION:   ${{ vars.GKE_LOCATION }}         # e.g. europe-north2
  K8S_NAMESPACE:  ${{ vars.K8S_NAMESPACE }}        # e.g. app

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.GCP_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev" --quiet

      - name: Set up Docker Buildx (BuildKit)
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Compute tags
        id: vars
        run: |
          echo "SHA_TAG=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.vars.outputs.IMAGE_URI }}:${{ steps.vars.outputs.SHA_TAG }}
            ${{ steps.vars.outputs.IMAGE_URI }}:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Get GKE credentials (Connect Gateway via Fleet)
        uses: google-github-actions/get-gke-credentials@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          use_connect_gateway: true
          fleet_membership_name: projects/${{ env.PROJECT_ID }}/locations/europe-north2/memberships/receptsamling

      - name: Ensure namespace exists
        run: kubectl get ns "$K8S_NAMESPACE" || kubectl create ns "$K8S_NAMESPACE"

      - name: Rollout new image
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/receptsamling \
            web="${IMAGE_URI}:${{ steps.vars.outputs.SHA_TAG }}"
          kubectl -n "$K8S_NAMESPACE" rollout status deployment/receptsamling --timeout=5m
